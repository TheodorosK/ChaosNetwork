inputs Tensor("InputData_1:0", shape=(?, 784), dtype=float32)
activation zero,  Tensor("input_projection/Relu:0", shape=(?, 12), dtype=float32)
prev_activations,  Tensor("Print:0", shape=(?, 12), dtype=float32)
prev_activations_shape,  (?, 12)
timestep_padded_controller_chaos Tensor("while/Print_1:0", dtype=float32)
<tf.Variable 'chaos_weights:0' shape=(1, 36) dtype=float32_ref>
[array([[ 6,  0],
       [ 0,  1],
       [10,  2],
       [ 2,  0],
       [ 9,  1],
       [ 7,  2]]), array([[ 8,  0],
       [ 4,  1],
       [ 3,  2],
       [ 2,  0],
       [ 7,  1],
       [10,  2]]), array([[ 7,  0],
       [ 8,  1],
       [11,  2],
       [ 1,  0],
       [ 4,  1],
       [ 0,  2]]), array([[ 5,  0],
       [ 3,  1],
       [ 0,  2],
       [ 8,  0],
       [10,  1],
       [11,  2]]), array([[ 6,  0],
       [ 7,  1],
       [ 9,  2],
       [ 4,  0],
       [ 8,  1],
       [10,  2]]), array([[ 5,  0],
       [10,  1],
       [ 1,  2],
       [ 0,  0],
       [ 9,  1],
       [ 4,  2]]), array([[8, 0],
       [6, 1],
       [2, 2],
       [3, 0],
       [5, 1],
       [4, 2]]), array([[ 1,  0],
       [ 9,  1],
       [11,  2],
       [ 5,  0],
       [ 4,  1],
       [ 2,  2]]), array([[7, 0],
       [5, 1],
       [9, 2],
       [2, 0],
       [4, 1],
       [8, 2]]), array([[7, 0],
       [6, 1],
       [8, 2],
       [3, 0],
       [5, 1],
       [0, 2]]), array([[ 4,  0],
       [11,  1],
       [ 8,  2],
       [10,  0],
       [ 7,  1],
       [ 6,  2]]), array([[ 7,  0],
       [ 3,  1],
       [ 5,  2],
       [ 4,  0],
       [10,  1],
       [ 1,  2]])]
chaos_activations_tensor_array <tensorflow.python.ops.tensor_array_ops.TensorArray object at 0x7f70cd2a8320>
node_deg, Tensor("while/while/Gather_1:0", shape=(), dtype=int32)
self.chaos_weights,  <tf.Variable 'chaos_weights:0' shape=(1, 36) dtype=float32_ref>
candidate_field_for_node with weight matching Tensor("while/while/Gather:0", shape=(6, 2), dtype=int64)
node weights:  Tensor("while/while/strided_slice:0", shape=(1, ?), dtype=float32)
node scores, Tensor("while/Print_5:0", shape=(3, 12), dtype=float32)
all weight_matched nodes [<tf.Tensor 'while/while/DynamicPartition:0' shape=(?,) dtype=int64>, <tf.Tensor 'while/while/DynamicPartition:1' shape=(?,) dtype=int64>, <tf.Tensor 'while/while/DynamicPartition:2' shape=(?,) dtype=int64>]
computed_selection_activations:  Tensor("while/while/map/TensorArrayStack/TensorArrayGatherV3:0", shape=(3, 3), dtype=float32)
node_activation, Tensor("while/while/Reshape_1:0", shape=(?,), dtype=float32)
CHAOS ITERATION, NEW ACTIVATIONS CALCULATED:  Tensor("while/Reshape_1:0", shape=(?, 12), dtype=float32)
current_activations,  Tensor("while/Print_6:0", shape=(?, 12), dtype=float32)
current activations:  Tensor("while/Exit_2:0", shape=(?, ?), dtype=float32)
inputs Tensor("InputData_1:0", shape=(?, 784), dtype=float32)
activation zero,  Tensor("input_projection_1/Relu:0", shape=(?, 12), dtype=float32)
prev_activations,  Tensor("Print_1:0", shape=(?, 12), dtype=float32)
prev_activations_shape,  (?, 12)
timestep_padded_controller_chaos Tensor("while_1/Print_1:0", dtype=float32)
<tf.Variable 'chaos_weights:0' shape=(1, 36) dtype=float32_ref>
[array([[ 6,  0],
       [ 0,  1],
       [10,  2],
       [ 2,  0],
       [ 9,  1],
       [ 7,  2]]), array([[ 8,  0],
       [ 4,  1],
       [ 3,  2],
       [ 2,  0],
       [ 7,  1],
       [10,  2]]), array([[ 7,  0],
       [ 8,  1],
       [11,  2],
       [ 1,  0],
       [ 4,  1],
       [ 0,  2]]), array([[ 5,  0],
       [ 3,  1],
       [ 0,  2],
       [ 8,  0],
       [10,  1],
       [11,  2]]), array([[ 6,  0],
       [ 7,  1],
       [ 9,  2],
       [ 4,  0],
       [ 8,  1],
       [10,  2]]), array([[ 5,  0],
       [10,  1],
       [ 1,  2],
       [ 0,  0],
       [ 9,  1],
       [ 4,  2]]), array([[8, 0],
       [6, 1],
       [2, 2],
       [3, 0],
       [5, 1],
       [4, 2]]), array([[ 1,  0],
       [ 9,  1],
       [11,  2],
       [ 5,  0],
       [ 4,  1],
       [ 2,  2]]), array([[7, 0],
       [5, 1],
       [9, 2],
       [2, 0],
       [4, 1],
       [8, 2]]), array([[7, 0],
       [6, 1],
       [8, 2],
       [3, 0],
       [5, 1],
       [0, 2]]), array([[ 4,  0],
       [11,  1],
       [ 8,  2],
       [10,  0],
       [ 7,  1],
       [ 6,  2]]), array([[ 7,  0],
       [ 3,  1],
       [ 5,  2],
       [ 4,  0],
       [10,  1],
       [ 1,  2]])]
chaos_activations_tensor_array <tensorflow.python.ops.tensor_array_ops.TensorArray object at 0x7f70cc6a9828>
node_deg, Tensor("while_1/while/Gather_1:0", shape=(), dtype=int32)
self.chaos_weights,  <tf.Variable 'chaos_weights:0' shape=(1, 36) dtype=float32_ref>
candidate_field_for_node with weight matching Tensor("while_1/while/Gather:0", shape=(6, 2), dtype=int64)
node weights:  Tensor("while_1/while/strided_slice:0", shape=(1, ?), dtype=float32)
node scores, Tensor("while_1/Print_2:0", shape=(3, 12), dtype=float32)
all weight_matched nodes [<tf.Tensor 'while_1/while/DynamicPartition:0' shape=(?,) dtype=int64>, <tf.Tensor 'while_1/while/DynamicPartition:1' shape=(?,) dtype=int64>, <tf.Tensor 'while_1/while/DynamicPartition:2' shape=(?,) dtype=int64>]
computed_selection_activations:  Tensor("while_1/while/map/TensorArrayStack/TensorArrayGatherV3:0", shape=(3, 3), dtype=float32)
node_activation, Tensor("while_1/while/Reshape_1:0", shape=(?,), dtype=float32)
CHAOS ITERATION, NEW ACTIVATIONS CALCULATED:  Tensor("while_1/Reshape_1:0", shape=(?, 12), dtype=float32)
current_activations,  Tensor("while_1/Print_3:0", shape=(?, 12), dtype=float32)
current activations:  Tensor("while_1/Exit_2:0", shape=(?, ?), dtype=float32)
0
